---
import { createNoise2D } from "simplex-noise";
import alea from "alea";

const rngSeed = new Date();
const rng = alea(rngSeed.toDateString());
const noise2D = createNoise2D(rng);

const gridSize = 300;

const grid: string[][] = Array.from({ length: gridSize }, () =>
  Array.from({ length: gridSize }, () => " ")
);

function scale(
  value: number,
  srcMin: number,
  srcMax: number,
  destMin: number,
  destMax: number
): number {
  const clamped = Math.min(Math.max(value, srcMin), srcMax);
  const normalised = (clamped - srcMin) / (srcMax - srcMin);
  const scaled = normalised * (destMax - destMin) + destMin;

  return scaled;
}

for (let i = 0; i < gridSize; i++) {
  for (let j = 0; j < gridSize; j++) {
    const noiseValue = noise2D(
      scale(i, 0, gridSize, 0, 10),
      scale(j, 0, gridSize, 0, 10)
    );

    const normalised = (noiseValue + 1) / 2;
    if (normalised > 0.85) {
      grid[i][j] = "*";
    } else if (normalised > 0.7) {
      grid[i][j] = "+";
    } else if (normalised > 0.6) {
      grid[i][j] = "@";
    }
  }
}
---

<style>
  pre {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin: 0;
    padding: 0;
    z-index: -999;
    font-size: 0.8rem;
    line-height: 1em;
    font-family: "Courier New", Courier, monospace;
  }

  .overlay {
    position: fixed;
    width: 100%;
    height: 100%;
    padding: 0;
  }
</style>

<pre aria-hidden="true">
  {grid.map((row) => <div>{row.join("")}</div>)}
</pre>
<div class="overlay" aria-hidden="true"></div>
